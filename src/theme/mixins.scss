@mixin hover() {

    &:hover:before {
        background-color: var(--v-button-text-base);
    }

    &:hover:before {
        border-radius: inherit;
        content: '';
        position: absolute;
        left: 0;
        top: 0;
        height: 100%;
        opacity: 0.12;
        -webkit-transition: 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);
        transition: 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);
        width: 100%;
    }
}

@mixin hoverable() {

    opacity: 0.8;

    &:hover {
        opacity: 1;
    }
}

@mixin unselectable() {
    -webkit-touch-callout: none !important;
    -webkit-user-select: none !important;
    -khtml-user-select: none !important;
    -moz-user-select: none !important;
    -ms-user-select: none !important;
    user-select: none !important;
}



// Created by Max Luster (@maxluster)
// Usage instructions at https://bugsnag.com/blog/responsive-typography-with-chained-media-queries
// Requires SASS >= 3.3
// Enhanced by Breakpoint 2.4.x and Compass 1.0 (alpha)
// For SASS 3.2.x support, use https://gist.github.com/maxluster/c9ecc6e4a6770e507c2c

// Provides a simplified syntax for chaining media queries across named or numeric breakpoints
@mixin responsive($properties, $default-value, $responsive-values) {
    // No named breakpoints by default
    $named-breakpoints: () !default;

    // Apply default property values
    @each $property in $properties {
        #{$property}: #{$default-value};
    }

    @each $breakpoint, $value in $responsive-values {
        // Get named breakpoint values
        @if type-of($breakpoint) == string {
            @if(map-has-key($named-breakpoints, $breakpoint)) {
                $breakpoint: map-get($named-breakpoints, $breakpoint);
            }
            @else {
                @warn "Couldn't find named breakpoint: " + $breakpoint;
            }
        }
        // Use Breakpoint if it exists
        @if mixin-exists("breakpoint") {
            // Apply at breakpoint
            @include breakpoint($breakpoint) {
                @each $property in $properties {
                    #{$property}: #{$value};
                }
            }
        }
        // Fallback to min-width media queries
        @else {
            @media screen and (min-width: $breakpoint) {
                @each $property in $properties {
                    #{$property}: #{$value};
                }
            }
        }
    }
}